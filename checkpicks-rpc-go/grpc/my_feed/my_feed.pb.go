// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: my_feed/my_feed.proto

package my_feed

import (
	common "github.com/YukiOnishi1129/checkpicks-protocol-buffers/checkpicks-rpc-go/grpc/common"
	content "github.com/YukiOnishi1129/checkpicks-protocol-buffers/checkpicks-rpc-go/grpc/content"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMyFeedFoldersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyFeedFolderEdges []*MyFeedFolderEdge `protobuf:"bytes,1,rep,name=my_feed_folder_edges,json=myFeedFolderEdges,proto3" json:"my_feed_folder_edges,omitempty"`
	PageInfo          *common.PageInfo    `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
}

func (x *GetMyFeedFoldersResponse) Reset() {
	*x = GetMyFeedFoldersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyFeedFoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyFeedFoldersResponse) ProtoMessage() {}

func (x *GetMyFeedFoldersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyFeedFoldersResponse.ProtoReflect.Descriptor instead.
func (*GetMyFeedFoldersResponse) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{0}
}

func (x *GetMyFeedFoldersResponse) GetMyFeedFolderEdges() []*MyFeedFolderEdge {
	if x != nil {
		return x.MyFeedFolderEdges
	}
	return nil
}

func (x *GetMyFeedFoldersResponse) GetPageInfo() *common.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetMyFeedFoldersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string                    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Keywords   []*wrapperspb.StringValue `protobuf:"bytes,2,rep,name=keywords,proto3" json:"keywords,omitempty"`
	IsAllFetch *wrapperspb.BoolValue     `protobuf:"bytes,3,opt,name=is_all_fetch,json=isAllFetch,proto3" json:"is_all_fetch,omitempty"`
	Cursor     string                    `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit      int64                     `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetMyFeedFoldersRequest) Reset() {
	*x = GetMyFeedFoldersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyFeedFoldersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyFeedFoldersRequest) ProtoMessage() {}

func (x *GetMyFeedFoldersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyFeedFoldersRequest.ProtoReflect.Descriptor instead.
func (*GetMyFeedFoldersRequest) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{1}
}

func (x *GetMyFeedFoldersRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMyFeedFoldersRequest) GetKeywords() []*wrapperspb.StringValue {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *GetMyFeedFoldersRequest) GetIsAllFetch() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsAllFetch
	}
	return nil
}

func (x *GetMyFeedFoldersRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetMyFeedFoldersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMyFeedFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyFeedFolder *MyFeedFolder `protobuf:"bytes,1,opt,name=my_feed_folder,json=myFeedFolder,proto3" json:"my_feed_folder,omitempty"`
}

func (x *GetMyFeedFolderResponse) Reset() {
	*x = GetMyFeedFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyFeedFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyFeedFolderResponse) ProtoMessage() {}

func (x *GetMyFeedFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyFeedFolderResponse.ProtoReflect.Descriptor instead.
func (*GetMyFeedFolderResponse) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{2}
}

func (x *GetMyFeedFolderResponse) GetMyFeedFolder() *MyFeedFolder {
	if x != nil {
		return x.MyFeedFolder
	}
	return nil
}

type GetMyFeedFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MyFeedFolderId string `protobuf:"bytes,2,opt,name=my_feed_folder_id,json=myFeedFolderId,proto3" json:"my_feed_folder_id,omitempty"`
}

func (x *GetMyFeedFolderRequest) Reset() {
	*x = GetMyFeedFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyFeedFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyFeedFolderRequest) ProtoMessage() {}

func (x *GetMyFeedFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyFeedFolderRequest.ProtoReflect.Descriptor instead.
func (*GetMyFeedFolderRequest) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{3}
}

func (x *GetMyFeedFolderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMyFeedFolderRequest) GetMyFeedFolderId() string {
	if x != nil {
		return x.MyFeedFolderId
	}
	return ""
}

type CreateMyFeedFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyFeedFolder *MyFeedFolder `protobuf:"bytes,1,opt,name=my_feed_folder,json=myFeedFolder,proto3" json:"my_feed_folder,omitempty"`
}

func (x *CreateMyFeedFolderResponse) Reset() {
	*x = CreateMyFeedFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMyFeedFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMyFeedFolderResponse) ProtoMessage() {}

func (x *CreateMyFeedFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMyFeedFolderResponse.ProtoReflect.Descriptor instead.
func (*CreateMyFeedFolderResponse) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMyFeedFolderResponse) GetMyFeedFolder() *MyFeedFolder {
	if x != nil {
		return x.MyFeedFolder
	}
	return nil
}

type CreateMyFeedFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string                  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	FeedIdList  []string                `protobuf:"bytes,4,rep,name=feed_id_list,json=feedIdList,proto3" json:"feed_id_list,omitempty"`
}

func (x *CreateMyFeedFolderRequest) Reset() {
	*x = CreateMyFeedFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMyFeedFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMyFeedFolderRequest) ProtoMessage() {}

func (x *CreateMyFeedFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMyFeedFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateMyFeedFolderRequest) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMyFeedFolderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateMyFeedFolderRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMyFeedFolderRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *CreateMyFeedFolderRequest) GetFeedIdList() []string {
	if x != nil {
		return x.FeedIdList
	}
	return nil
}

type UpdateMyFeedFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyFeedFolder *MyFeedFolder `protobuf:"bytes,1,opt,name=my_feed_folder,json=myFeedFolder,proto3" json:"my_feed_folder,omitempty"`
}

func (x *UpdateMyFeedFolderResponse) Reset() {
	*x = UpdateMyFeedFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyFeedFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyFeedFolderResponse) ProtoMessage() {}

func (x *UpdateMyFeedFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyFeedFolderResponse.ProtoReflect.Descriptor instead.
func (*UpdateMyFeedFolderResponse) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMyFeedFolderResponse) GetMyFeedFolder() *MyFeedFolder {
	if x != nil {
		return x.MyFeedFolder
	}
	return nil
}

type UpdateMyFeedFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string                  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MyFeedFolderId string                  `protobuf:"bytes,2,opt,name=my_feed_folder_id,json=myFeedFolderId,proto3" json:"my_feed_folder_id,omitempty"`
	Title          string                  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description    *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	FeedIdList     []string                `protobuf:"bytes,5,rep,name=feed_id_list,json=feedIdList,proto3" json:"feed_id_list,omitempty"`
}

func (x *UpdateMyFeedFolderRequest) Reset() {
	*x = UpdateMyFeedFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyFeedFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyFeedFolderRequest) ProtoMessage() {}

func (x *UpdateMyFeedFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyFeedFolderRequest.ProtoReflect.Descriptor instead.
func (*UpdateMyFeedFolderRequest) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMyFeedFolderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateMyFeedFolderRequest) GetMyFeedFolderId() string {
	if x != nil {
		return x.MyFeedFolderId
	}
	return ""
}

func (x *UpdateMyFeedFolderRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMyFeedFolderRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateMyFeedFolderRequest) GetFeedIdList() []string {
	if x != nil {
		return x.FeedIdList
	}
	return nil
}

type UpsertMyFeedListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyFeedList []*MyFeed `protobuf:"bytes,1,rep,name=my_feed_list,json=myFeedList,proto3" json:"my_feed_list,omitempty"`
}

func (x *UpsertMyFeedListResponse) Reset() {
	*x = UpsertMyFeedListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertMyFeedListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertMyFeedListResponse) ProtoMessage() {}

func (x *UpsertMyFeedListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertMyFeedListResponse.ProtoReflect.Descriptor instead.
func (*UpsertMyFeedListResponse) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{8}
}

func (x *UpsertMyFeedListResponse) GetMyFeedList() []*MyFeed {
	if x != nil {
		return x.MyFeedList
	}
	return nil
}

type DeleteMyFeedFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MyFeedFolderId string `protobuf:"bytes,2,opt,name=my_feed_folder_id,json=myFeedFolderId,proto3" json:"my_feed_folder_id,omitempty"`
}

func (x *DeleteMyFeedFolderRequest) Reset() {
	*x = DeleteMyFeedFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMyFeedFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyFeedFolderRequest) ProtoMessage() {}

func (x *DeleteMyFeedFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyFeedFolderRequest.ProtoReflect.Descriptor instead.
func (*DeleteMyFeedFolderRequest) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteMyFeedFolderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteMyFeedFolderRequest) GetMyFeedFolderId() string {
	if x != nil {
		return x.MyFeedFolderId
	}
	return ""
}

type UpsertMyFeedListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MyFeedFolderId string   `protobuf:"bytes,2,opt,name=my_feed_folder_id,json=myFeedFolderId,proto3" json:"my_feed_folder_id,omitempty"`
	FeedIdList     []string `protobuf:"bytes,3,rep,name=feed_id_list,json=feedIdList,proto3" json:"feed_id_list,omitempty"`
}

func (x *UpsertMyFeedListRequest) Reset() {
	*x = UpsertMyFeedListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertMyFeedListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertMyFeedListRequest) ProtoMessage() {}

func (x *UpsertMyFeedListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertMyFeedListRequest.ProtoReflect.Descriptor instead.
func (*UpsertMyFeedListRequest) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{10}
}

func (x *UpsertMyFeedListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpsertMyFeedListRequest) GetMyFeedFolderId() string {
	if x != nil {
		return x.MyFeedFolderId
	}
	return ""
}

func (x *UpsertMyFeedListRequest) GetFeedIdList() []string {
	if x != nil {
		return x.FeedIdList
	}
	return nil
}

type DeleteMyFeedListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MyFeedFolderId string `protobuf:"bytes,2,opt,name=my_feed_folder_id,json=myFeedFolderId,proto3" json:"my_feed_folder_id,omitempty"`
	FeedId         string `protobuf:"bytes,3,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *DeleteMyFeedListRequest) Reset() {
	*x = DeleteMyFeedListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMyFeedListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyFeedListRequest) ProtoMessage() {}

func (x *DeleteMyFeedListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyFeedListRequest.ProtoReflect.Descriptor instead.
func (*DeleteMyFeedListRequest) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMyFeedListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteMyFeedListRequest) GetMyFeedFolderId() string {
	if x != nil {
		return x.MyFeedFolderId
	}
	return ""
}

func (x *DeleteMyFeedListRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

type MyFeedFolderEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node   *MyFeedFolder `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Cursor string        `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *MyFeedFolderEdge) Reset() {
	*x = MyFeedFolderEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyFeedFolderEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyFeedFolderEdge) ProtoMessage() {}

func (x *MyFeedFolderEdge) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyFeedFolderEdge.ProtoReflect.Descriptor instead.
func (*MyFeedFolderEdge) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{12}
}

func (x *MyFeedFolderEdge) GetNode() *MyFeedFolder {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *MyFeedFolderEdge) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type MyFeedFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string                  `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Feeds       []*content.Feed         `protobuf:"bytes,4,rep,name=feeds,proto3" json:"feeds,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *MyFeedFolder) Reset() {
	*x = MyFeedFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyFeedFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyFeedFolder) ProtoMessage() {}

func (x *MyFeedFolder) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyFeedFolder.ProtoReflect.Descriptor instead.
func (*MyFeedFolder) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{13}
}

func (x *MyFeedFolder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MyFeedFolder) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MyFeedFolder) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MyFeedFolder) GetFeeds() []*content.Feed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *MyFeedFolder) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *MyFeedFolder) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MyFeedFolder) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MyFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MyFeedFolderId string                 `protobuf:"bytes,3,opt,name=my_feed_folder_id,json=myFeedFolderId,proto3" json:"my_feed_folder_id,omitempty"`
	FeedId         string                 `protobuf:"bytes,4,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *MyFeed) Reset() {
	*x = MyFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_feed_my_feed_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyFeed) ProtoMessage() {}

func (x *MyFeed) ProtoReflect() protoreflect.Message {
	mi := &file_my_feed_my_feed_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyFeed.ProtoReflect.Descriptor instead.
func (*MyFeed) Descriptor() ([]byte, []int) {
	return file_my_feed_my_feed_proto_rawDescGZIP(), []int{14}
}

func (x *MyFeed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MyFeed) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MyFeed) GetMyFeedFolderId() string {
	if x != nil {
		return x.MyFeedFolderId
	}
	return ""
}

func (x *MyFeed) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

func (x *MyFeed) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MyFeed) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_my_feed_my_feed_proto protoreflect.FileDescriptor

var file_my_feed_my_feed_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69,
	0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x14, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73,
	0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x64, 0x67, 0x65, 0x52, 0x11, 0x6d, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd8, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69,
	0x73, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x64, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x0c, 0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x5c, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x11, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x79, 0x46,
	0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x6d, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d,
	0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x22, 0xac, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46,
	0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x49, 0x0a, 0x0e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0c,
	0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0xd7, 0x01, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x64,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x52, 0x0a, 0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x46,
	0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x17, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x79, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x79, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x63, 0x0a,
	0x10, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x64, 0x67,
	0x65, 0x12, 0x37, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x22, 0xb6, 0x02, 0x0a, 0x0c, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x05,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x06,
	0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x11, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65,
	0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65,
	0x64, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xcc, 0x04, 0x0a, 0x0d, 0x4d, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x2e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65,
	0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65,
	0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x70, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73,
	0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e,
	0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x79, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73,
	0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63,
	0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x30,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x6d, 0x79, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x46,
	0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x59, 0x75, 0x6b, 0x69, 0x4f, 0x6e, 0x69, 0x73, 0x68,
	0x69, 0x31, 0x31, 0x32, 0x39, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x2d, 0x72, 0x70, 0x63,
	0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_my_feed_my_feed_proto_rawDescOnce sync.Once
	file_my_feed_my_feed_proto_rawDescData = file_my_feed_my_feed_proto_rawDesc
)

func file_my_feed_my_feed_proto_rawDescGZIP() []byte {
	file_my_feed_my_feed_proto_rawDescOnce.Do(func() {
		file_my_feed_my_feed_proto_rawDescData = protoimpl.X.CompressGZIP(file_my_feed_my_feed_proto_rawDescData)
	})
	return file_my_feed_my_feed_proto_rawDescData
}

var file_my_feed_my_feed_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_my_feed_my_feed_proto_goTypes = []any{
	(*GetMyFeedFoldersResponse)(nil),   // 0: checkpicks.my_feed.v1.GetMyFeedFoldersResponse
	(*GetMyFeedFoldersRequest)(nil),    // 1: checkpicks.my_feed.v1.GetMyFeedFoldersRequest
	(*GetMyFeedFolderResponse)(nil),    // 2: checkpicks.my_feed.v1.GetMyFeedFolderResponse
	(*GetMyFeedFolderRequest)(nil),     // 3: checkpicks.my_feed.v1.GetMyFeedFolderRequest
	(*CreateMyFeedFolderResponse)(nil), // 4: checkpicks.my_feed.v1.CreateMyFeedFolderResponse
	(*CreateMyFeedFolderRequest)(nil),  // 5: checkpicks.my_feed.v1.CreateMyFeedFolderRequest
	(*UpdateMyFeedFolderResponse)(nil), // 6: checkpicks.my_feed.v1.UpdateMyFeedFolderResponse
	(*UpdateMyFeedFolderRequest)(nil),  // 7: checkpicks.my_feed.v1.UpdateMyFeedFolderRequest
	(*UpsertMyFeedListResponse)(nil),   // 8: checkpicks.my_feed.v1.UpsertMyFeedListResponse
	(*DeleteMyFeedFolderRequest)(nil),  // 9: checkpicks.my_feed.v1.DeleteMyFeedFolderRequest
	(*UpsertMyFeedListRequest)(nil),    // 10: checkpicks.my_feed.v1.UpsertMyFeedListRequest
	(*DeleteMyFeedListRequest)(nil),    // 11: checkpicks.my_feed.v1.DeleteMyFeedListRequest
	(*MyFeedFolderEdge)(nil),           // 12: checkpicks.my_feed.v1.MyFeedFolderEdge
	(*MyFeedFolder)(nil),               // 13: checkpicks.my_feed.v1.MyFeedFolder
	(*MyFeed)(nil),                     // 14: checkpicks.my_feed.v1.MyFeed
	(*common.PageInfo)(nil),            // 15: checkpicks.common.v1.PageInfo
	(*wrapperspb.StringValue)(nil),     // 16: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),       // 17: google.protobuf.BoolValue
	(*content.Feed)(nil),               // 18: checkpicks.content.v1.Feed
	(*timestamppb.Timestamp)(nil),      // 19: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 20: google.protobuf.Empty
}
var file_my_feed_my_feed_proto_depIdxs = []int32{
	12, // 0: checkpicks.my_feed.v1.GetMyFeedFoldersResponse.my_feed_folder_edges:type_name -> checkpicks.my_feed.v1.MyFeedFolderEdge
	15, // 1: checkpicks.my_feed.v1.GetMyFeedFoldersResponse.page_info:type_name -> checkpicks.common.v1.PageInfo
	16, // 2: checkpicks.my_feed.v1.GetMyFeedFoldersRequest.keywords:type_name -> google.protobuf.StringValue
	17, // 3: checkpicks.my_feed.v1.GetMyFeedFoldersRequest.is_all_fetch:type_name -> google.protobuf.BoolValue
	13, // 4: checkpicks.my_feed.v1.GetMyFeedFolderResponse.my_feed_folder:type_name -> checkpicks.my_feed.v1.MyFeedFolder
	13, // 5: checkpicks.my_feed.v1.CreateMyFeedFolderResponse.my_feed_folder:type_name -> checkpicks.my_feed.v1.MyFeedFolder
	16, // 6: checkpicks.my_feed.v1.CreateMyFeedFolderRequest.description:type_name -> google.protobuf.StringValue
	13, // 7: checkpicks.my_feed.v1.UpdateMyFeedFolderResponse.my_feed_folder:type_name -> checkpicks.my_feed.v1.MyFeedFolder
	16, // 8: checkpicks.my_feed.v1.UpdateMyFeedFolderRequest.description:type_name -> google.protobuf.StringValue
	14, // 9: checkpicks.my_feed.v1.UpsertMyFeedListResponse.my_feed_list:type_name -> checkpicks.my_feed.v1.MyFeed
	13, // 10: checkpicks.my_feed.v1.MyFeedFolderEdge.node:type_name -> checkpicks.my_feed.v1.MyFeedFolder
	18, // 11: checkpicks.my_feed.v1.MyFeedFolder.feeds:type_name -> checkpicks.content.v1.Feed
	16, // 12: checkpicks.my_feed.v1.MyFeedFolder.description:type_name -> google.protobuf.StringValue
	19, // 13: checkpicks.my_feed.v1.MyFeedFolder.created_at:type_name -> google.protobuf.Timestamp
	19, // 14: checkpicks.my_feed.v1.MyFeedFolder.updated_at:type_name -> google.protobuf.Timestamp
	19, // 15: checkpicks.my_feed.v1.MyFeed.created_at:type_name -> google.protobuf.Timestamp
	19, // 16: checkpicks.my_feed.v1.MyFeed.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 17: checkpicks.my_feed.v1.MyFeedService.GetMyFeedFolders:input_type -> checkpicks.my_feed.v1.GetMyFeedFoldersRequest
	3,  // 18: checkpicks.my_feed.v1.MyFeedService.GetMyFeedFolder:input_type -> checkpicks.my_feed.v1.GetMyFeedFolderRequest
	5,  // 19: checkpicks.my_feed.v1.MyFeedService.CreateMyFeedFolder:input_type -> checkpicks.my_feed.v1.CreateMyFeedFolderRequest
	7,  // 20: checkpicks.my_feed.v1.MyFeedService.UpdateMyFeedFolder:input_type -> checkpicks.my_feed.v1.UpdateMyFeedFolderRequest
	9,  // 21: checkpicks.my_feed.v1.MyFeedService.DeleteMyFeedFolder:input_type -> checkpicks.my_feed.v1.DeleteMyFeedFolderRequest
	0,  // 22: checkpicks.my_feed.v1.MyFeedService.GetMyFeedFolders:output_type -> checkpicks.my_feed.v1.GetMyFeedFoldersResponse
	2,  // 23: checkpicks.my_feed.v1.MyFeedService.GetMyFeedFolder:output_type -> checkpicks.my_feed.v1.GetMyFeedFolderResponse
	4,  // 24: checkpicks.my_feed.v1.MyFeedService.CreateMyFeedFolder:output_type -> checkpicks.my_feed.v1.CreateMyFeedFolderResponse
	6,  // 25: checkpicks.my_feed.v1.MyFeedService.UpdateMyFeedFolder:output_type -> checkpicks.my_feed.v1.UpdateMyFeedFolderResponse
	20, // 26: checkpicks.my_feed.v1.MyFeedService.DeleteMyFeedFolder:output_type -> google.protobuf.Empty
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_my_feed_my_feed_proto_init() }
func file_my_feed_my_feed_proto_init() {
	if File_my_feed_my_feed_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_my_feed_my_feed_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetMyFeedFoldersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetMyFeedFoldersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetMyFeedFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetMyFeedFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMyFeedFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMyFeedFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMyFeedFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMyFeedFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertMyFeedListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMyFeedFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertMyFeedListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMyFeedListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MyFeedFolderEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MyFeedFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_feed_my_feed_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*MyFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_my_feed_my_feed_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_my_feed_my_feed_proto_goTypes,
		DependencyIndexes: file_my_feed_my_feed_proto_depIdxs,
		MessageInfos:      file_my_feed_my_feed_proto_msgTypes,
	}.Build()
	File_my_feed_my_feed_proto = out.File
	file_my_feed_my_feed_proto_rawDesc = nil
	file_my_feed_my_feed_proto_goTypes = nil
	file_my_feed_my_feed_proto_depIdxs = nil
}
